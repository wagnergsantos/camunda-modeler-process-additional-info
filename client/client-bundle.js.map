{"version":3,"file":"client-bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;AChDA;AACA;AAKA;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChJA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACpPA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjWA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACv2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AAIA;AAEA","sources":["webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/ProcessDocumentationPropertiesProvider.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/custom/MultiSelectEntry.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/custom/RadioEntry.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/helper/extensions-helper.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/helper/fixed-properties-helper.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/index.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/props/current-situation-props.js","webpack://camunda-modeler-process-io-specification-plugin/./client/properties-panel/props/process-documentation-props.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/bpmn-js/lib/util/ModelUtil.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/camunda-modeler-plugin-helpers/helper.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/camunda-modeler-plugin-helpers/vendor/@bpmn-io/properties-panel/index.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/camunda-modeler-plugin-helpers/vendor/bpmn-js-properties-panel.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/preact/dist/preact.module.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/classnames/index.js","webpack://camunda-modeler-process-io-specification-plugin/./node_modules/min-dash/dist/index.esm.js","webpack://camunda-modeler-process-io-specification-plugin/webpack/bootstrap","webpack://camunda-modeler-process-io-specification-plugin/webpack/runtime/compat get default export","webpack://camunda-modeler-process-io-specification-plugin/webpack/runtime/define property getters","webpack://camunda-modeler-process-io-specification-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://camunda-modeler-process-io-specification-plugin/webpack/runtime/make namespace object","webpack://camunda-modeler-process-io-specification-plugin/./client/client.js"],"sourcesContent":["// client/properties-panel/ProcessDocumentationPropertiesProvider.js\r\nimport { is, getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { ProcessDocumentationGroup } from './props/process-documentation-props';\r\nimport { CurrentSituationGroup } from './props/current-situation-props';\r\n\r\nexport default class ProcessDocumentationPropertiesProvider {\r\n  constructor(propertiesPanel, injector) {\r\n    this._injector = injector;\r\n    propertiesPanel.registerProvider(this);\r\n  }\r\n\r\n  getTabs(element) {\r\n    // Sempre exibe a aba, independente do tipo de elemento\r\n    const groups = [];\r\n    const processDocumentationGroup = ProcessDocumentationGroup(element, this._injector);\r\n    if (processDocumentationGroup) {\r\n      groups.push(processDocumentationGroup);\r\n    }\r\n\r\n    return [\r\n      {\r\n        id: 'generalInfo',\r\n        label: 'Informações gerais',\r\n        groups\r\n      }\r\n    ];\r\n  }\r\n\r\n  getGroups(element) {\r\n    return (groups) => {\r\n      groups = groups.slice();\r\n\r\n      const definitionsElement = findDefinitionsElement(this._injector);\r\n      console.log('definitions found:', definitionsElement); // DEBUG\r\n\r\n      if (!definitionsElement) {\r\n        console.warn('No definitions element found!');\r\n        return groups;\r\n      }\r\n\r\n      // Grupo de Informações gerais\r\n      const infoGroup = {\r\n        id: 'generalInfo',\r\n        label: 'Informações gerais',\r\n        entries: []\r\n      };\r\n\r\n      const processDocumentationGroup = ProcessDocumentationGroup(definitionsElement, this._injector);\r\n      console.log('documentation group:', processDocumentationGroup); // DEBUG\r\n\r\n      if (processDocumentationGroup && processDocumentationGroup.entries) {\r\n        infoGroup.entries.push(...processDocumentationGroup.entries);\r\n      }\r\n\r\n      // Adiciona o novo grupo de situação atual\r\n      const currentSituationGroup = CurrentSituationGroup(definitionsElement, this._injector);\r\n\r\n      groups.push(infoGroup);\r\n      if (currentSituationGroup) {\r\n        groups.push(currentSituationGroup);\r\n      }\r\n\r\n      return groups;\r\n    };\r\n  }\r\n}\r\n\r\nProcessDocumentationPropertiesProvider.$inject = [\r\n  'propertiesPanel',\r\n  'injector'\r\n];\r\n\r\n// Função utilitária para encontrar o elemento bpmn:Process do diagrama\r\nfunction findProcessElement(element, injector) {\r\n  const modeling = injector.get('elementRegistry', false);\r\n  if (!modeling) return null;\r\n\r\n  // Procura o primeiro elemento do tipo bpmn:Process\r\n  const allElements = modeling.getAll ? modeling.getAll() : modeling._elements ? Object.values(modeling._elements).map(e => e.element) : [];\r\n  const processElement = allElements.find(el => is(el, 'bpmn:Process'));\r\n  return processElement || null;\r\n}\r\n\r\nfunction getProcessRef(element) {\r\n  const bo = getBusinessObject(element);\r\n  return bo.processRef;\r\n}\r\n\r\n// Nova implementação para encontrar o elemento definitions\r\nfunction findDefinitionsElement(injector) {\r\n  const modeler = injector.get('bpmnjs', false);\r\n  if (!modeler) return null;\r\n\r\n  // Garantir que pegamos o definitions\r\n  const definitions = modeler.getDefinitions();\r\n  console.log('definitions type:', definitions && definitions.$type); // DEBUG\r\n  return definitions;\r\n}","// Use Preact explicitamente para evitar erro \"React is not defined\"\r\nimport { h } from 'preact';\r\nimport { Description, Tooltip } from '@bpmn-io/properties-panel';\r\nimport classNames from 'classnames';\r\n\r\nexport default function MultiSelectEntry(props) {\r\n  const {\r\n    element,\r\n    id,\r\n    description,\r\n    label,\r\n    getValue,\r\n    setValue,\r\n    getOptions,\r\n    disabled,\r\n    onFocus,\r\n    onBlur,\r\n    tooltip\r\n  } = props;\r\n\r\n  const options = getOptions(element);\r\n\r\n  // Corrige: sempre retorna array de strings, mesmo se vier undefined ou string vazia\r\n  let rawValue = getValue(element);\r\n  let value;\r\n  if (Array.isArray(rawValue)) {\r\n    value = rawValue;\r\n  } else if (typeof rawValue === 'string') {\r\n    value = rawValue.split(',').map(v => v.trim()).filter(Boolean);\r\n  } else if (rawValue == null) {\r\n    value = [];\r\n  } else {\r\n    value = [String(rawValue)];\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const selected = Array.from(event.target.selectedOptions).map(opt => opt.value);\r\n    setValue(selected);\r\n  };\r\n\r\n  // Corrige: sempre passa value como array (mesmo se vazio)\r\n  return (\r\n    h('div', { class: classNames('bio-properties-panel-entry'), 'data-entry-id': id },\r\n      h('label', { for: id, class: 'bio-properties-panel-label' },\r\n        h(Tooltip, { value: tooltip, forId: id, element: element }, label)\r\n      ),\r\n      h('select', {\r\n        id,\r\n        name: id,\r\n        class: 'bio-properties-panel-input',\r\n        multiple: true,\r\n        onInput: handleChange,\r\n        onFocus,\r\n        onBlur,\r\n        value: value.length ? value : [''],\r\n        disabled\r\n      },\r\n        options.map((option, idx) =>\r\n          h('option', {\r\n            key: idx,\r\n            value: option.value,\r\n            disabled: option.disabled,\r\n            selected: value.includes(option.value)\r\n          }, option.label)\r\n        )\r\n      ),\r\n      h(Description, { forId: id, element: element, value: description })\r\n    )\r\n  );\r\n}\r\n","import { h } from 'preact';\r\nimport { Description, Tooltip } from '@bpmn-io/properties-panel';\r\nimport classNames from 'classnames';\r\n\r\nexport default function RadioEntry(props) {\r\n  const {\r\n    element,\r\n    id,\r\n    description,\r\n    label,\r\n    getValue,\r\n    setValue,\r\n    getOptions,\r\n    disabled,\r\n    onFocus,\r\n    onBlur,\r\n    tooltip\r\n  } = props;\r\n\r\n  const options = getOptions(element);\r\n  const value = getValue(element) || '';\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    h('div', { class: classNames('bio-properties-panel-entry'), 'data-entry-id': id },\r\n      label && h('label', { class: 'bio-properties-panel-label' },\r\n        h(Tooltip, { value: tooltip, forId: id, element: element }, label)\r\n      ),\r\n      h('div', { class: 'bio-properties-panel-radio-group' },\r\n        options.map((option, idx) =>\r\n          h('label', { key: idx, class: 'bio-properties-panel-radio' },\r\n            h('input', {\r\n              type: 'radio',\r\n              name: id,\r\n              value: option.value,\r\n              checked: value === option.value,\r\n              disabled: disabled || option.disabled,\r\n              onInput: handleChange,\r\n              onFocus,\r\n              onBlur\r\n            }),\r\n            option.label\r\n          )\r\n        )\r\n      ),\r\n      h(Description, { forId: id, element: element, value: description })\r\n    )\r\n  );\r\n}\r\n","import { isAny } from 'bpmn-js/lib/features/modeling/util/ModelingUtil';\r\nimport { getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\r\n\r\nexport function findExtensions(element, types) {\r\n  const extensionElements = getExtensionElements(element);\r\n\r\n  if (!extensionElements) {\r\n    return [];\r\n  }\r\n\r\n  return extensionElements.get('values').filter((value) => {\r\n    return isAny(value, [].concat(types));\r\n  });\r\n}\r\n\r\nexport function getExtensionElements(element) {\r\n  const businessObject = getBusinessObject(element);\r\n\r\n  return businessObject.get('extensionElements');\r\n}\r\n\r\nexport function getCamundaProperties(element) {\r\n  const bo = getBusinessObject(element);\r\n\r\n  const properties = findExtensions(bo, 'camunda:Properties') || [];\r\n\r\n  if (properties.length) {\r\n    return properties[0];\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function createExtensionElements(element, bpmnFactory) {\r\n  const bo = getBusinessObject(element);\r\n\r\n  return createElement('bpmn:ExtensionElements', { values: [] }, bo, bpmnFactory);\r\n}\r\n\r\nexport function createCamundaProperties(extensionElements, bpmnFactory, properties) {\r\n  return createElement('camunda:Properties', properties, extensionElements, bpmnFactory);\r\n}\r\n\r\nexport function createElement(elementType, properties, parent, factory) {\r\n  const element = factory.create(elementType, properties);\r\n  element.$parent = parent;\r\n\r\n  return element;\r\n}\r\n","// client/properties-panel/helper/fixed-properties-helper.js\r\nimport { getBusinessObject } from 'bpmn-js/lib/util/ModelUtil';\r\nimport {\r\n  createExtensionElements, // Você pode precisar adaptar ou copiar de extensions-helper.js\r\n  createCamundaProperties,   // Você pode precisar adaptar ou copiar de extensions-helper.js\r\n  getExtensionElements,    // Você pode precisar adaptar ou copiar de extensions-helper.js\r\n  getCamundaProperties as getCamundaPropertiesContainer // Renomeie se houver conflito\r\n} from './extensions-helper'; // Adapte o caminho se moveu/renomeou extensions-helper.js\r\n\r\nfunction getDefinitionsElement(element) {\r\n  if (!element) return null;\r\n\r\n  const bo = element.businessObject || element;\r\n  \r\n  // If we already have definitions, return it\r\n  if (bo.$type === 'bpmn:Definitions') {\r\n    return bo;\r\n  }\r\n\r\n  // Navigate up until we find definitions\r\n  let current = bo;\r\n  while (current && current.$type !== 'bpmn:Definitions') {\r\n    current = current.$parent;\r\n  }\r\n\r\n  return current;\r\n}\r\n\r\n/**\r\n * Obtém o valor de uma propriedade camunda:property específica.\r\n * @param {object} element O elemento definitions do diagrama.\r\n * @param {string} propertyName O nome da propriedade (ex: 'processo:codigo').\r\n * @returns {string|undefined} O valor da propriedade ou undefined.\r\n */\r\nexport function getFixedProperty(element, propertyName) {\r\n  if (!element) return '';\r\n\r\n  const definitions = getDefinitionsElement(element);\r\n  if (!definitions) return '';\r\n\r\n  const extensionElements = definitions.get('extensionElements');\r\n  if (!extensionElements) return '';\r\n\r\n  const camundaProperties = extensionElements.get('values')\r\n    .find(v => v.$type === 'camunda:Properties');\r\n  \r\n  if (!camundaProperties || !camundaProperties.values) return '';\r\n\r\n  const property = camundaProperties.values.find(p => p.name === propertyName);\r\n  return property ? property.value : '';\r\n}\r\n\r\n/**\r\n * Define o valor de uma propriedade camunda:property específica.\r\n * @param {object} element O elemento definitions do diagrama.\r\n * @param {string} propertyName O nome da propriedade.\r\n * @param {string} propertyValue O valor da propriedade.\r\n * @param {object} modeling Serviço de modelagem do bpmn-js.\r\n * @param {object} bpmnFactory Fábrica de elementos BPMN do bpmn-js.\r\n */\r\nexport function setFixedProperty(element, propertyName, propertyValue, modeling, bpmnFactory) {\r\n  if (!element) return;\r\n\r\n  console.log('setFixedProperty called with:', {\r\n    element,\r\n    propertyName,\r\n    propertyValue\r\n  });\r\n\r\n  const definitions = getDefinitionsElement(element);\r\n  \r\n  console.log('Found definitions:', definitions); // DEBUG\r\n\r\n  if (!definitions) {\r\n    console.warn('No definitions found');\r\n    return;\r\n  }\r\n\r\n  let extensionElements = definitions.get('extensionElements');\r\n\r\n  // 1. Garante bpmn:ExtensionElements\r\n  if (!extensionElements) {\r\n    extensionElements = bpmnFactory.create('bpmn:ExtensionElements', { values: [] });\r\n    modeling.updateModdleProperties(definitions, definitions, {\r\n      extensionElements: extensionElements\r\n    });\r\n  }\r\n\r\n  // 2. Garante camunda:Properties\r\n  let camundaProperties = extensionElements.get('values').find(v => v.$type === 'camunda:Properties');\r\n  if (!camundaProperties) {\r\n    camundaProperties = bpmnFactory.create('camunda:Properties', { values: [] });\r\n    modeling.updateModdleProperties(definitions, extensionElements, {\r\n      values: [...extensionElements.get('values'), camundaProperties]\r\n    });\r\n  }\r\n\r\n  // 3. Atualiza ou cria a propriedade\r\n  let targetProperty = camundaProperties.values?.find(p => p.name === propertyName);\r\n\r\n  if (shouldRemoveProperty(propertyValue)) {\r\n    if (targetProperty) {\r\n      const newValues = camundaProperties.values.filter(p => p.name !== propertyName);\r\n      modeling.updateModdleProperties(definitions, camundaProperties, { values: newValues });\r\n    }\r\n  } else {\r\n    if (targetProperty) {\r\n      modeling.updateModdleProperties(definitions, targetProperty, { value: propertyValue });\r\n    } else {\r\n      const newProperty = bpmnFactory.create('camunda:Property', {\r\n        name: propertyName,\r\n        value: propertyValue\r\n      });\r\n      const newValues = [...(camundaProperties.values || []), newProperty];\r\n      modeling.updateModdleProperties(definitions, camundaProperties, { values: newValues });\r\n    }\r\n  }\r\n}\r\n\r\nfunction shouldRemoveProperty(value) {\r\n  return value === undefined || value === null || value === '';\r\n}\r\n\r\n// Adapte ou copie as funções createExtensionElements, createCamundaProperties,\r\n// getExtensionElements, getCamundaProperties de 'extensions-helper.js' para este arquivo\r\n// ou ajuste os imports se você reorganizar os helpers.\r\n// É crucial que getCamundaPropertiesContainer retorne o elemento <camunda:Properties>.\r\n// A versão original em extensions-helper.js:\r\n// export function getCamundaProperties(element) {\r\n//   const bo = getBusinessObject(element); // Certifique-se que 'element' aqui é o business object\r\n//   const properties = findExtensions(bo, 'camunda:Properties') || [];\r\n//   if (properties.length) {\r\n//     return properties[0];\r\n//   }\r\n//   return null;\r\n// }\r\n// findExtensions também de extensions-helper.js\r\n// export function findExtensions(element, types) {\r\n//   const extensionElements = getExtensionElements(element); // element é o business object\r\n//   if (!extensionElements) {\r\n//     return [];\r\n//   }\r\n//   return extensionElements.get('values').filter(value => {\r\n//     return isAny(value, [].concat(types)); // isAny de bpmn-js/lib/features/modeling/util/ModelingUtil\r\n//   });","// client/properties-panel/index.js\r\nimport ProviderClass from './ProcessDocumentationPropertiesProvider';\r\n\r\n// Garante que estamos usando a classe construtora real.\r\nconst ActualProviderClass = ProviderClass.default || ProviderClass;\r\n\r\nexport default {\r\n  __init__: [ 'processDocumentationPropertiesProvider' ],\r\n  processDocumentationPropertiesProvider: [ 'type', ActualProviderClass ]\r\n};","import { SelectEntry, TextAreaEntry, Group, TextFieldEntry } from '@bpmn-io/properties-panel';\r\nimport { useService } from 'bpmn-js-properties-panel';\r\nimport { getFixedProperty, setFixedProperty } from '../helper/fixed-properties-helper';\r\nimport MultiSelectEntry from '../custom/MultiSelectEntry';\r\nimport RadioEntry from '../custom/RadioEntry';\r\n\r\n// Componente para \"Periodicidade\"\r\nfunction PeriodicityEntry(props) {\r\n  const { element, id } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  const propertyName = 'processo:periodicidade';\r\n\r\n  const getValue = () => {\r\n    return getFixedProperty(element, propertyName);\r\n  };\r\n\r\n  const setValue = (value) => {\r\n    setFixedProperty(element, propertyName, value, modeling, bpmnFactory);\r\n  };\r\n\r\n  const getOptions = () => {\r\n    return [\r\n      { value: 'diaria', label: translate('Diária') },\r\n      { value: 'semanal', label: translate('Semanal') },\r\n      { value: 'quinzenal', label: translate('Quinzenal') },\r\n      { value: 'mensal', label: translate('Mensal') },\r\n      { value: 'bimestral', label: translate('Bimestral') },\r\n      { value: 'trimestral', label: translate('Trimestral') },\r\n      { value: 'quadrimestral', label: translate('Quadrimestral') },\r\n      { value: 'semestral', label: translate('Semestral') },\r\n      { value: 'anual', label: translate('Anual') },\r\n      { value: 'sob_demanda', label: translate('Por demanda') },\r\n      { value: 'outro', label: translate('Outro') }\r\n    ];\r\n  };\r\n\r\n  return SelectEntry({\r\n    element,\r\n    id: id + '-periodicity',\r\n    label: translate('Periodicidade'),\r\n    getValue,\r\n    setValue,\r\n    getOptions,\r\n    debounce\r\n  });\r\n}\r\n\r\n// Função para criar as entradas de tempo de execução\r\nfunction createTimeExecutionEntries(element) {\r\n  return [\r\n    {\r\n      id: 'time-execution',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const debounce = useService('debounceInput');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return TextFieldEntry({\r\n          ...props,\r\n          element,\r\n          label: translate('Tempo de execução do processo'),\r\n          getValue: () => getFixedProperty(element, 'processo:tempoExecucao'),\r\n          setValue: value => setFixedProperty(element, 'processo:tempoExecucao', value, modeling, bpmnFactory),\r\n          debounce\r\n        });\r\n      }\r\n    },\r\n    {\r\n      id: 'time-execution-type',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return RadioEntry ({\r\n          ...props,\r\n          element,\r\n          getValue: () => getFixedProperty(element, 'processo:tempoExecucaoTipo'),\r\n          setValue: value => setFixedProperty(element, 'processo:tempoExecucaoTipo', value, modeling, bpmnFactory),\r\n          getOptions: () => [\r\n            { value: 'estimado', label: translate('Estimado') },\r\n            { value: 'mensurado', label: translate('Mensurado') }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nfunction createQtdDemandsEntries(element) {\r\n  return [\r\n    {\r\n      id: 'demands',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const debounce = useService('debounceInput');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return TextFieldEntry({\r\n          ...props,\r\n          element,\r\n          label: translate('Quantidade de demandas recebidas'),\r\n          getValue: () => getFixedProperty(element, 'processo:quantidadeDemandas'),\r\n          setValue: value => setFixedProperty(element, 'processo:quantidadeDemandas', value, modeling, bpmnFactory),\r\n          debounce\r\n        });\r\n      }\r\n    },\r\n    {\r\n      id: 'demands-type',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return RadioEntry({\r\n          ...props,\r\n          element,\r\n          getValue: () => getFixedProperty(element, 'processo:quantidadeDemandasTipo'),\r\n          setValue: value => setFixedProperty(element, 'processo:quantidadeDemandasTipo', value, modeling, bpmnFactory),\r\n          getOptions: () => [\r\n            { value: 'estimado', label: translate('Estimado') },\r\n            { value: 'mensurado', label: translate('Mensurado') }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nfunction createCapacityEntries(element) {\r\n  return [\r\n    {\r\n      id: 'capacity',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const debounce = useService('debounceInput');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return TextFieldEntry({\r\n          ...props,\r\n          element,\r\n          label: translate('Capacidade aproximada de execução do processo'),\r\n          getValue: () => getFixedProperty(element, 'processo:capacidadeExecucao'),\r\n          setValue: value => setFixedProperty(element, 'processo:capacidadeExecucao', value, modeling, bpmnFactory),\r\n          debounce\r\n        });\r\n      }\r\n    },\r\n    {\r\n      id: 'capacity-type',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return RadioEntry({\r\n          ...props,\r\n          element,\r\n          getValue: () => getFixedProperty(element, 'processo:capacidadeExecucaoTipo'),\r\n          setValue: value => setFixedProperty(element, 'processo:capacidadeExecucaoTipo', value, modeling, bpmnFactory),\r\n          getOptions: () => [\r\n            { value: 'estimado', label: translate('Estimado') },\r\n            { value: 'mensurado', label: translate('Mensurado') }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nfunction createExecutorsEntries(element) {\r\n  return [\r\n    {\r\n      id: 'executors-quantity',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const debounce = useService('debounceInput');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return TextFieldEntry({\r\n          ...props,\r\n          element,\r\n          label: translate('Quantidade de executores do processo'),\r\n          getValue: () => getFixedProperty(element, 'processo:quantidadeExecutores'),\r\n          setValue: value => {\r\n            // Garante que só aceita números inteiros ou vazio\r\n            const intValue = value.replace(/\\D/g, '');\r\n            setFixedProperty(element, 'processo:quantidadeExecutores', intValue, modeling, bpmnFactory);\r\n          },\r\n          debounce\r\n        });\r\n      }\r\n    },\r\n    {\r\n      id: 'executors-profile',\r\n      component: function(props) {\r\n        const modeling = useService('modeling');\r\n        const translate = useService('translate');\r\n        const debounce = useService('debounceInput');\r\n        const bpmnFactory = useService('bpmnFactory');\r\n\r\n        return TextAreaEntry({\r\n          ...props,\r\n          element,\r\n          label: translate('Perfil'),\r\n          getValue: () => getFixedProperty(element, 'processo:perfilExecutores'), \r\n          setValue: value => setFixedProperty(element, 'processo:perfilExecutores', value, modeling, bpmnFactory),\r\n          debounce\r\n        });\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nexport function CurrentSituationGroup(element, injector) {\r\n  const translate = injector.get('translate');\r\n\r\n  const entries = [\r\n    {\r\n      id: 'process-periodicity',\r\n      component: PeriodicityEntry,\r\n      element\r\n    },\r\n    ...createTimeExecutionEntries(element),\r\n    ...createQtdDemandsEntries(element),\r\n    ...createCapacityEntries(element),\r\n    ...createExecutorsEntries(element)\r\n  ];\r\n\r\n  return {\r\n    id: 'current-situation',\r\n    label: translate('Dados da situação atual'),\r\n    component: Group,\r\n    entries\r\n  };\r\n}","// client/properties-panel/props/process-documentation-props.js\r\nimport { TextFieldEntry, TextAreaEntry, Group } from '@bpmn-io/properties-panel'; // Group para agrupar as entradas\r\nimport { useService } from 'bpmn-js-properties-panel';\r\nimport { getFixedProperty, setFixedProperty } from '../helper/fixed-properties-helper';\r\n\r\n// Generic Text Field Entry Component\r\nfunction GenericTextFieldEntry(props) {\r\n  const { element, id, propertyName, label } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  return TextFieldEntry({\r\n    element,\r\n    id,\r\n    label: translate(label),\r\n    getValue: () => getFixedProperty(element, propertyName),\r\n    setValue: value => setFixedProperty(element, propertyName, value, modeling, bpmnFactory),\r\n    debounce\r\n  });\r\n}\r\n\r\n// Generic Text Area Entry Component\r\nfunction GenericTextAreaEntry(props) {\r\n  const { element, id, propertyName, label } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  return TextAreaEntry({\r\n    element,\r\n    id,\r\n    label: translate(label),\r\n    getValue: () => getFixedProperty(element, propertyName),\r\n    setValue: value => setFixedProperty(element, propertyName, value, modeling, bpmnFactory),\r\n    debounce\r\n  });\r\n}\r\n\r\n// Componente para \"Código do Processo\"\r\nfunction ProcessCodeEntry(props) {\r\n  const { element, id } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  const propertyName = 'processo:codigo'; // Nome da propriedade no XML\r\n\r\n  const getValue = () => {\r\n    return getFixedProperty(element, propertyName);\r\n  };\r\n\r\n  const setValue = (value) => {\r\n    setFixedProperty(element, propertyName, value, modeling, bpmnFactory);\r\n  };\r\n\r\n  return TextFieldEntry({\r\n    element: element, // O elemento do diagrama, não a propriedade moddle diretamente\r\n    id: id + '-processCode',\r\n    label: translate('Código do Processo'),\r\n    getValue,\r\n    setValue,\r\n    debounce\r\n  });\r\n}\r\n\r\n// Componente para \"Nome do Processo\"\r\nfunction ProcessNameEntry(props) {\r\n  const { element, id } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  const propertyName = 'processo:nome';\r\n\r\n  const getValue = () => {\r\n    return getFixedProperty(element, propertyName);\r\n  };\r\n\r\n  const setValue = (value) => {\r\n    setFixedProperty(element, propertyName, value, modeling, bpmnFactory);\r\n  };\r\n\r\n  return TextFieldEntry({\r\n    element: element,\r\n    id: id + '-processName',\r\n    label: translate('Nome do Processo'),\r\n    getValue,\r\n    setValue,\r\n    debounce\r\n  });\r\n}\r\n\r\n// Componente para \"Objetivo do Processo\"\r\nfunction ProcessObjectiveEntry(props) {\r\n  const { element, id } = props;\r\n  const modeling = useService('modeling');\r\n  const translate = useService('translate');\r\n  const debounce = useService('debounceInput');\r\n  const bpmnFactory = useService('bpmnFactory');\r\n\r\n  const propertyName = 'processo:objetivo';\r\n\r\n  const getValue = () => {\r\n    return getFixedProperty(element, propertyName);\r\n  };\r\n\r\n  const setValue = (value) => {\r\n    setFixedProperty(element, propertyName, value, modeling, bpmnFactory);\r\n  };\r\n\r\n  return TextFieldEntry({\r\n    element: element,\r\n    id: id + '-processObjective',\r\n    label: translate('Objetivo do Processo'),\r\n    getValue,\r\n    setValue,\r\n    debounce,\r\n    // Se quiser um campo de texto maior:\r\n    // component: TextAreaEntry // Importar TextAreaEntry de @bpmn-io/properties-panel\r\n  });\r\n}\r\n\r\n// Função que cria o grupo\r\nexport function ProcessDocumentationGroup(element, injector) {\r\n  const translate = injector.get('translate');\r\n  \r\n  console.log('Creating group with element:', element); // DEBUG\r\n\r\n  // Garantir que temos o elemento definitions\r\n  if (!element || element.$type !== 'bpmn:Definitions') {\r\n    console.warn('Invalid element type for documentation group:', element && element.$type);\r\n    return null;\r\n  }\r\n\r\n  const entries = [\r\n    {\r\n      id: 'process-code',\r\n      component: ProcessCodeEntry,\r\n      element: element // Passando o elemento definitions\r\n    },\r\n    {\r\n      id: 'process-name',\r\n      component: ProcessNameEntry,\r\n      element: element // Passando o elemento definitions\r\n    },\r\n    {\r\n      id: 'definitions-prop-entrada',\r\n      component: GenericTextFieldEntry,\r\n      element,\r\n      propertyName: 'processo:entradaInsumo',\r\n      label: 'Entrada do processo (Insumo)'\r\n    },\r\n    {\r\n      id: 'definitions-prop-fornecedores',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:fornecedores',\r\n      label: 'Fornecedores'\r\n    },\r\n    {\r\n      id: 'process-objective',\r\n      component: ProcessObjectiveEntry,\r\n      element: element // Passando o elemento definitions\r\n    },\r\n    {\r\n      id: 'definitions-prop-saida',\r\n      component: GenericTextFieldEntry,\r\n      element,\r\n      propertyName: 'processo:saidaResultado',\r\n      label: 'Saída do processo (Resultado / Produto)'\r\n    },\r\n    {\r\n      id: 'definitions-prop-clientes',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:clientes',\r\n      label: 'Clientes'\r\n    },\r\n    {\r\n      id: 'definitions-prop-interface',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:interfaceProcessos',\r\n      label: 'Interface com outros processos'\r\n    },\r\n    {\r\n      id: 'definitions-prop-regras',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:regrasNegocio',\r\n      label: 'Principais regras de negócio do processo'\r\n    },\r\n    {\r\n      id: 'definitions-prop-donoArea',\r\n      component: GenericTextFieldEntry,\r\n      element,\r\n      propertyName: 'processo:donoProcessoArea',\r\n      label: 'Dono do processo (Área)'\r\n    },\r\n    {\r\n      id: 'definitions-prop-donoGestor',\r\n      component: GenericTextFieldEntry,\r\n      element,\r\n      propertyName: 'processo:donoProcessoGestor',\r\n      label: 'Dono do processo (Gestor(a))'\r\n    },\r\n    {\r\n      id: 'definitions-prop-atores',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:atoresEnvolvidos',\r\n      label: 'Atores envolvidos'\r\n    },\r\n    {\r\n      id: 'definitions-prop-sistemas',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:sistemasUtilizados',\r\n      label: 'Sistemas utilizados'\r\n    },\r\n    {\r\n      id: 'definitions-prop-legislacao',\r\n      component: GenericTextAreaEntry,\r\n      element,\r\n      propertyName: 'processo:legislacaoNormativos',\r\n      label: 'Legislação / Normativos aplicáveis'\r\n    }\r\n  ];\r\n\r\n  // Só retorna o grupo se houver entradas (boa prática)\r\n  if (!entries.length) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    id: 'process-documentation', // ID único para o grupo\r\n    label: translate('Documentação do Processo'),\r\n    component: Group, // Usando o componente Group para encapsular as entradas\r\n    entries: entries\r\n  };\r\n}","import {\n  some\n} from 'min-dash';\n\n/**\n * @typedef { import('../model/Types').Element } Element\n * @typedef { import('../model/Types').ModdleElement } ModdleElement\n */\n\n/**\n * Is an element of the given BPMN type?\n *\n * @param  {Element|ModdleElement} element\n * @param  {string} type\n *\n * @return {boolean}\n */\nexport function is(element, type) {\n  var bo = getBusinessObject(element);\n\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\n}\n\n\n/**\n * Return true if element has any of the given types.\n *\n * @param {Element|ModdleElement} element\n * @param {string[]} types\n *\n * @return {boolean}\n */\nexport function isAny(element, types) {\n  return some(types, function(t) {\n    return is(element, t);\n  });\n}\n\n/**\n * Return the business object for a given element.\n *\n * @param {Element|ModdleElement} element\n *\n * @return {ModdleElement}\n */\nexport function getBusinessObject(element) {\n  return (element && element.businessObject) || element;\n}\n\n/**\n * Return the di object for a given element.\n *\n * @param {Element} element\n *\n * @return {ModdleElement}\n */\nexport function getDi(element) {\n  return element && element.di;\n}","module.exports.returnOrThrow = function(getter, minimalModelerVersion) {\n  let result;\n  try {\n    result = getter();\n  } catch (error) {}\n\n  if (!result) {\n    throw new Error(`Not compatible with Camunda Modeler < ${minimalModelerVersion}`);\n  }\n\n  return result;\n}\n","/**\n * Validate and register a client plugin.\n *\n * @param {Object} plugin\n * @param {String} type\n */\nexport function registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\n * Validate and register a client plugin.\n *\n * @param {import('react').ComponentType} extension\n *\n * @example\n *\n * import MyExtensionComponent from './MyExtensionComponent';\n *\n * registerClientExtension(MyExtensionComponent);\n */\nexport function registerClientExtension(component) {\n  registerClientPlugin(component, 'client');\n}\n\n/**\n * Validate and register a bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\n}\n\n/**\n * Validate and register a platform specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerPlatformBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.platform.modeler.additionalModules');\n}\n\n/**\n * Validate and register a cloud specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerCloudBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.cloud.modeler.additionalModules');\n}\n\n/**\n * Validate and register a bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a cloud specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerCloudDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerCloudDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.cloud.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a platform specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerPlatformDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerPlatformDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.platform.modeler.${c}.additionalModules`));\n}\n\n/**\n * Return the modeler directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getModelerDirectory() {\n  return window.getModelerDirectory();\n}\n\n/**\n * Return the modeler plugin directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getPluginsDirectory() {\n  return window.getPluginsDirectory();\n}","const { returnOrThrow } = require('../../../helper');\n\nmodule.exports = returnOrThrow(() => window.vendor.propertiesPanel.common, '5.0.0');\n","const { returnOrThrow } = require('../helper');\n\nmodule.exports = returnOrThrow(() => window.vendor.propertiesPanel.bpmn, '5.0.0');\n","var n,l,u,t,i,o,r,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h=Array.isArray;function v(n,l){for(var u in l)n[u]=l[u];return n}function p(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d(l,f,i,o,null)}function d(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function _(){return{current:null}}function g(n){return n.children}function b(n,l){this.props=n,this.context=l}function m(n,l){if(null==l)return n.__?m(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?m(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function w(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!x.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(x)}function x(){var n,u,t,o,r,e,c,s,a;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,s=[],a=[],(c=t.__P)&&((o=v({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),L(c,o,r,t.__n,void 0!==c.ownerSVGElement,32&r.__u?[e]:null,s,null==e?m(r):e,!!(32&r.__u),a),o.__.__k[o.__i]=o,M(s,o,a),o.__e!=e&&k(o)),i.length>u&&i.sort(f));x.__r=0}function C(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s,b=l.length;for(u.__d=e,P(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c:g[y.__i]||c,y.__i=v,L(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&z(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=S(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_}function P(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d(null,i,null,null,i):h(i)?d(g,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=H(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m(o)),N(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m(o)),N(o,o))}function S(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=S(t[i],l,u));return l}return n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e),l&&l.nextSibling}function $(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(h(n)?n.some(function(n){$(n,l)}):l.push(n)),l}function H(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function I(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function T(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||I(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||I(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?D:A,o)):n.removeEventListener(l,o?D:A,o);else{if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u))}}function A(n){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l.event?l.event(n):n)}function D(n){return this.l[n.type+!0](l.event?l.event(n):n)}function L(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,k,w,x,P,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof A)try{if(w=u.props,x=(a=A.contextType)&&i[a.__c],P=a?x?x.props.value:a.__:i,t.__c?k=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(w,P):(u.__c=p=new b(w,P),p.constructor=A,p.render=O),x&&x.sub(p),p.props=w,p.state||(p.state={}),p.context=P,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v({},p.__s)),v(p.__s,A.getDerivedStateFromProps(w,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else{if(null==A.getDerivedStateFromProps&&w!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(w,P),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(w,p.__s,P)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=w,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(w,p.__s,P),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m)})}if(p.context=P,p.props=w,p.__P=n,p.__e=!1,$=l.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[]}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v(v({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),C(n,h(T=null!=a&&a.type===g&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),k&&(p.__E=p.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=j(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function M(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)z(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function j(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,k=t.props,w=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(w);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,w.is&&w),r=null,e=!1}if(null===x)k===w||e&&l.data===w||(l.data=w);else{if(r=r&&n.call(l.childNodes),k=t.props||c,!e&&null!=r)for(k={},a=0;a<l.attributes.length;a++)k[(_=l.attributes[a]).name]=_.value;for(a in k)_=k[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in w||T(l,a,null,_,o));for(a in w)_=w[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||k[a]===_||T(l,a,_,k[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),C(l,h(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==k[a])&&T(l,a,g,k[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&T(l,a,b,k[a],!1))}return l}function z(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function N(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||z(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null,n.__c=void 0}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&N(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function q(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],L(t,u=(!o&&i||t).__k=y(g,null,[u]),r||c,c,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),M(f,u,e)}function B(n,l){q(n,l,B)}function E(l,u,t){var i,o,r,f,e=v({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),d(l.type,e,i||l.key,o||l.ref,null)}function F(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,w(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v({},this.state),\"function\"==typeof n&&(n=n(v({},u),this.props)),n&&v(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),w(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),w(this))},b.prototype.render=g,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},x.__r=0,e=0;export{b as Component,g as Fragment,E as cloneElement,F as createContext,y as createElement,_ as createRef,y as h,B as hydrate,t as isValidElement,l as options,q as render,$ as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Flatten array, one level deep.\n *\n * @template T\n *\n * @param {T[][] | T[] | null} [arr]\n *\n * @return {T[]}\n */\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nconst nativeToString = Object.prototype.toString;\nconst nativeHasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\n\nfunction isDefined(obj) {\n  return obj !== undefined;\n}\n\nfunction isNil(obj) {\n  return obj == null;\n}\n\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\n\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\n\nfunction isNumber(obj) {\n  return nativeToString.call(obj) === '[object Number]';\n}\n\n/**\n * @param {any} obj\n *\n * @return {boolean}\n */\nfunction isFunction(obj) {\n  const tag = nativeToString.call(obj);\n\n  return (\n    tag === '[object Function]' ||\n    tag === '[object AsyncFunction]' ||\n    tag === '[object GeneratorFunction]' ||\n    tag === '[object AsyncGeneratorFunction]' ||\n    tag === '[object Proxy]'\n  );\n}\n\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n\n\n/**\n * Ensure collection is an array.\n *\n * @param {Object} obj\n */\nfunction ensureArray(obj) {\n\n  if (isArray(obj)) {\n    return;\n  }\n\n  throw new Error('must supply array');\n}\n\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n\n/**\n * @template T\n * @typedef { (\n *   ((e: T) => boolean) |\n *   ((e: T, idx: number) => boolean) |\n *   ((e: T, key: string) => boolean) |\n *   string |\n *   number\n * ) } Matcher\n */\n\n/**\n * @template T\n * @template U\n *\n * @typedef { (\n *   ((e: T) => U) | string | number\n * ) } Extractor\n */\n\n\n/**\n * @template T\n * @typedef { (val: T, key: any) => boolean } MatchFn\n */\n\n/**\n * @template T\n * @typedef { T[] } ArrayCollection\n */\n\n/**\n * @template T\n * @typedef { { [key: string]: T } } StringKeyValueCollection\n */\n\n/**\n * @template T\n * @typedef { { [key: number]: T } } NumberKeyValueCollection\n */\n\n/**\n * @template T\n * @typedef { StringKeyValueCollection<T> | NumberKeyValueCollection<T> } KeyValueCollection\n */\n\n/**\n * @template T\n * @typedef { KeyValueCollection<T> | ArrayCollection<T> } Collection\n */\n\n/**\n * Find element in collection.\n *\n * @template T\n * @param {Collection<T>} collection\n * @param {Matcher<T>} matcher\n *\n * @return {Object}\n */\nfunction find(collection, matcher) {\n\n  const matchFn = toMatcher(matcher);\n\n  let match;\n\n  forEach(collection, function(val, key) {\n    if (matchFn(val, key)) {\n      match = val;\n\n      return false;\n    }\n  });\n\n  return match;\n\n}\n\n\n/**\n * Find element index in collection.\n *\n * @template T\n * @param {Collection<T>} collection\n * @param {Matcher<T>} matcher\n *\n * @return {number}\n */\nfunction findIndex(collection, matcher) {\n\n  const matchFn = toMatcher(matcher);\n\n  let idx = isArray(collection) ? -1 : undefined;\n\n  forEach(collection, function(val, key) {\n    if (matchFn(val, key)) {\n      idx = key;\n\n      return false;\n    }\n  });\n\n  return idx;\n}\n\n\n/**\n * Filter elements in collection.\n *\n * @template T\n * @param {Collection<T>} collection\n * @param {Matcher<T>} matcher\n *\n * @return {T[]} result\n */\nfunction filter(collection, matcher) {\n\n  const matchFn = toMatcher(matcher);\n\n  let result = [];\n\n  forEach(collection, function(val, key) {\n    if (matchFn(val, key)) {\n      result.push(val);\n    }\n  });\n\n  return result;\n}\n\n\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @template T\n * @param {Collection<T>} collection\n * @param { ((item: T, idx: number) => (boolean|void)) | ((item: T, key: string) => (boolean|void)) } iterator\n *\n * @return {T} return result that stopped the iteration\n */\nfunction forEach(collection, iterator) {\n\n  let val,\n      result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  const convertKey = isArray(collection) ? toNum : identity;\n\n  for (let key in collection) {\n\n    if (has(collection, key)) {\n      val = collection[key];\n\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n\n/**\n * Return collection without element.\n *\n * @template T\n * @param {ArrayCollection<T>} arr\n * @param {Matcher<T>} matcher\n *\n * @return {T[]}\n */\nfunction without(arr, matcher) {\n\n  if (isUndefined(arr)) {\n    return [];\n  }\n\n  ensureArray(arr);\n\n  const matchFn = toMatcher(matcher);\n\n  return arr.filter(function(el, idx) {\n    return !matchFn(el, idx);\n  });\n\n}\n\n\n/**\n * Reduce collection, returning a single result.\n *\n * @template T\n * @template V\n *\n * @param {Collection<T>} collection\n * @param {(result: V, entry: T, index: any) => V} iterator\n * @param {V} result\n *\n * @return {V} result returned from last iterator\n */\nfunction reduce(collection, iterator, result) {\n\n  forEach(collection, function(value, idx) {\n    result = iterator(result, value, idx);\n  });\n\n  return result;\n}\n\n\n/**\n * Return true if every element in the collection\n * matches the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\nfunction every(collection, matcher) {\n\n  return !!reduce(collection, function(matches, val, key) {\n    return matches && matcher(val, key);\n  }, true);\n}\n\n\n/**\n * Return true if some elements in the collection\n * match the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\nfunction some(collection, matcher) {\n\n  return !!find(collection, matcher);\n}\n\n\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\nfunction map(collection, fn) {\n\n  let result = [];\n\n  forEach(collection, function(val, key) {\n    result.push(fn(val, key));\n  });\n\n  return result;\n}\n\n\n/**\n * Get the collections keys.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\nfunction keys(collection) {\n  return collection && Object.keys(collection) || [];\n}\n\n\n/**\n * Shorthand for `keys(o).length`.\n *\n * @param  {Object|Array} collection\n *\n * @return {Number}\n */\nfunction size(collection) {\n  return keys(collection).length;\n}\n\n\n/**\n * Get the values in the collection.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\nfunction values(collection) {\n  return map(collection, (val) => val);\n}\n\n\n/**\n * Group collection members by attribute.\n *\n * @param {Object|Array} collection\n * @param {Extractor} extractor\n *\n * @return {Object} map with { attrValue => [ a, b, c ] }\n */\nfunction groupBy(collection, extractor, grouped = {}) {\n\n  extractor = toExtractor(extractor);\n\n  forEach(collection, function(val) {\n    let discriminator = extractor(val) || '_';\n\n    let group = grouped[discriminator];\n\n    if (!group) {\n      group = grouped[discriminator] = [];\n    }\n\n    group.push(val);\n  });\n\n  return grouped;\n}\n\n\nfunction uniqueBy(extractor, ...collections) {\n\n  extractor = toExtractor(extractor);\n\n  let grouped = {};\n\n  forEach(collections, (c) => groupBy(c, extractor, grouped));\n\n  let result = map(grouped, function(val, key) {\n    return val[0];\n  });\n\n  return result;\n}\n\n\nconst unionBy = uniqueBy;\n\n\n\n/**\n * Sort collection by criteria.\n *\n * @template T\n *\n * @param {Collection<T>} collection\n * @param {Extractor<T, number | string>} extractor\n *\n * @return {Array}\n */\nfunction sortBy(collection, extractor) {\n\n  extractor = toExtractor(extractor);\n\n  let sorted = [];\n\n  forEach(collection, function(value, key) {\n    let disc = extractor(value, key);\n\n    let entry = {\n      d: disc,\n      v: value\n    };\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      let { d } = sorted[idx];\n\n      if (disc < d) {\n        sorted.splice(idx, 0, entry);\n        return;\n      }\n    }\n\n    // not inserted, append (!)\n    sorted.push(entry);\n  });\n\n  return map(sorted, (e) => e.v);\n}\n\n\n/**\n * Create an object pattern matcher.\n *\n * @example\n *\n * ```javascript\n * const matcher = matchPattern({ id: 1 });\n *\n * let element = find(elements, matcher);\n * ```\n *\n * @template T\n *\n * @param {T} pattern\n *\n * @return { (el: any) =>  boolean } matcherFn\n */\nfunction matchPattern(pattern) {\n\n  return function(el) {\n\n    return every(pattern, function(val, key) {\n      return el[key] === val;\n    });\n\n  };\n}\n\n\n/**\n * @param {string | ((e: any) => any) } extractor\n *\n * @return { (e: any) => any }\n */\nfunction toExtractor(extractor) {\n\n  /**\n   * @satisfies { (e: any) => any }\n   */\n  return isFunction(extractor) ? extractor : (e) => {\n\n    // @ts-ignore: just works\n    return e[extractor];\n  };\n}\n\n\n/**\n * @template T\n * @param {Matcher<T>} matcher\n *\n * @return {MatchFn<T>}\n */\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : (e) => {\n    return e === matcher;\n  };\n}\n\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\n/* global setTimeout clearTimeout */\n\n/**\n * @typedef { {\n *   (...args: any[]): any;\n *   flush: () => void;\n *   cancel: () => void;\n * } } DebouncedFunction\n */\n\n/**\n * Debounce fn, calling it only once if the given time\n * elapsed between calls.\n *\n * Lodash-style the function exposes methods to `#clear`\n * and `#flush` to control internal behavior.\n *\n * @param  {Function} fn\n * @param  {Number} timeout\n *\n * @return {DebouncedFunction} debounced function\n */\nfunction debounce(fn, timeout) {\n\n  let timer;\n\n  let lastArgs;\n  let lastThis;\n\n  let lastNow;\n\n  function fire(force) {\n\n    let now = Date.now();\n\n    let scheduledDiff = force ? 0 : (lastNow + timeout) - now;\n\n    if (scheduledDiff > 0) {\n      return schedule(scheduledDiff);\n    }\n\n    fn.apply(lastThis, lastArgs);\n\n    clear();\n  }\n\n  function schedule(timeout) {\n    timer = setTimeout(fire, timeout);\n  }\n\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = lastNow = lastArgs = lastThis = undefined;\n  }\n\n  function flush() {\n    if (timer) {\n      fire(true);\n    }\n\n    clear();\n  }\n\n  /**\n   * @type { DebouncedFunction }\n   */\n  function callback(...args) {\n    lastNow = Date.now();\n\n    lastArgs = args;\n    lastThis = this;\n\n    // ensure an execution is scheduled\n    if (!timer) {\n      schedule(timeout);\n    }\n  }\n\n  callback.flush = flush;\n  callback.cancel = clear;\n\n  return callback;\n}\n\n/**\n * Throttle fn, calling at most once\n * in the given interval.\n *\n * @param  {Function} fn\n * @param  {Number} interval\n *\n * @return {Function} throttled function\n */\nfunction throttle(fn, interval) {\n  let throttling = false;\n\n  return function(...args) {\n\n    if (throttling) {\n      return;\n    }\n\n    fn(...args);\n    throttling = true;\n\n    setTimeout(() => {\n      throttling = false;\n    }, interval);\n  };\n}\n\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\nfunction assign(target, ...others) {\n  return Object.assign(target, ...others);\n}\n\n/**\n * Sets a nested property of a given object to the specified value.\n *\n * This mutates the object and returns it.\n *\n * @template T\n *\n * @param {T} target The target of the set operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} value The value to set.\n *\n * @return {T}\n */\nfunction set(target, path, value) {\n\n  let currentTarget = target;\n\n  forEach(path, function(key, idx) {\n\n    if (typeof key !== 'number' && typeof key !== 'string') {\n      throw new Error('illegal key type: ' + typeof key + '. Key should be of type number or string.');\n    }\n\n    if (key === 'constructor') {\n      throw new Error('illegal key: constructor');\n    }\n\n    if (key === '__proto__') {\n      throw new Error('illegal key: __proto__');\n    }\n\n    let nextKey = path[idx + 1];\n    let nextTarget = currentTarget[key];\n\n    if (isDefined(nextKey) && isNil(nextTarget)) {\n      nextTarget = currentTarget[key] = isNaN(+nextKey) ? {} : [];\n    }\n\n    if (isUndefined(nextKey)) {\n      if (isUndefined(value)) {\n        delete currentTarget[key];\n      } else {\n        currentTarget[key] = value;\n      }\n    } else {\n      currentTarget = nextTarget;\n    }\n  });\n\n  return target;\n}\n\n\n/**\n * Gets a nested property of a given object.\n *\n * @param {Object} target The target of the get operation.\n * @param {(string|number)[]} path The path to the nested value.\n * @param {any} [defaultValue] The value to return if no value exists.\n *\n * @return {any}\n */\nfunction get(target, path, defaultValue) {\n\n  let currentTarget = target;\n\n  forEach(path, function(key) {\n\n    // accessing nil property yields <undefined>\n    if (isNil(currentTarget)) {\n      currentTarget = undefined;\n\n      return false;\n    }\n\n    currentTarget = currentTarget[key];\n  });\n\n  return isUndefined(currentTarget) ? defaultValue : currentTarget;\n}\n\n/**\n * Pick properties from the given target.\n *\n * @template T\n * @template {any[]} V\n *\n * @param {T} target\n * @param {V} properties\n *\n * @return Pick<T, V>\n */\nfunction pick(target, properties) {\n\n  let result = {};\n\n  let obj = Object(target);\n\n  forEach(properties, function(prop) {\n\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n\n  return result;\n}\n\n/**\n * Pick all target properties, excluding the given ones.\n *\n * @template T\n * @template {any[]} V\n *\n * @param {T} target\n * @param {V} properties\n *\n * @return {Omit<T, V>} target\n */\nfunction omit(target, properties) {\n\n  let result = {};\n\n  let obj = Object(target);\n\n  forEach(obj, function(prop, key) {\n\n    if (properties.indexOf(key) === -1) {\n      result[key] = prop;\n    }\n  });\n\n  return result;\n}\n\n/**\n * Recursively merge `...sources` into given target.\n *\n * Does support merging objects; does not support merging arrays.\n *\n * @param {Object} target\n * @param {...Object} sources\n *\n * @return {Object} the target\n */\nfunction merge(target, ...sources) {\n\n  if (!sources.length) {\n    return target;\n  }\n\n  forEach(sources, function(source) {\n\n    // skip non-obj sources, i.e. null\n    if (!source || !isObject(source)) {\n      return;\n    }\n\n    forEach(source, function(sourceVal, key) {\n\n      if (key === '__proto__') {\n        return;\n      }\n\n      let targetVal = target[key];\n\n      if (isObject(sourceVal)) {\n\n        if (!isObject(targetVal)) {\n\n          // override target[key] with object\n          targetVal = {};\n        }\n\n        target[key] = merge(targetVal, sourceVal);\n      } else {\n        target[key] = sourceVal;\n      }\n\n    });\n  });\n\n  return target;\n}\n\nexport { assign, bind, debounce, ensureArray, every, filter, find, findIndex, flatten, forEach, get, groupBy, has, isArray, isDefined, isFunction, isNil, isNumber, isObject, isString, isUndefined, keys, map, matchPattern, merge, omit, pick, reduce, set, size, some, sortBy, throttle, unionBy, uniqueBy, values, without };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// client/client.js\r\nimport {\r\n  registerPlatformBpmnJSPlugin\r\n} from 'camunda-modeler-plugin-helpers';\r\n\r\nimport propertiesPanelExtensionModule from './properties-panel';\r\n\r\nregisterPlatformBpmnJSPlugin(propertiesPanelExtensionModule);"],"names":[],"sourceRoot":""}